# Sample configuration file for OpenLMI script metacommand.

[Main]
# Python namespace, where command entry points will be searched for.
#CommandNamespace = lmi.scripts.cmd

# Whether the exceptions should be logged with tracebacks.
#Trace = False

# A number within range <0, 2> saying, how verbosive the output shall be.
# This differs from [Log]Level, which controls the logging messages. This
# option is recognized by commands allone making them print more information
# on stdout.
#Verbosity = 0

[CIM]
# To override default CIM namespace, uncomment the line below.
#namespace = root/cimv2

[SSL]
# Whether to verify server-side certificate, when making secured connection
# over ssl.
#VerifyServerCertificate = True

[Format]
# Whether to print values in human readable forms (e.g. with units).
#HumanFriendly = False

# What format to use, when listing tabular data. Possible values are:
# {csv, table}. The former allows for easy machine parsing, the latter
# is more human friendly.
#ListerFormat = table

# Whether to suppress headings (column names) when printing tables.
#NoHeadings = False

[Log]
# Level can be set to following values:
#   DEBUG, INFO, WARNING, ERROR, CRITICAL
# Affects only logging to a file.
#Level = ERROR

# Format string used, when logging to a console. For details visit:
# http://docs.python.org/2/library/logging.html#logrecord-attributes
#ConsoleFormat = %(levelname)s: %(message)s

# Format string used, when logging to a file.
#FileFormat = %(asctime)s:%(levelname)-8s:%(name)s:%(lineno)d - %(message)s

# Allows to set a path to file, where messages will be logged. No log
# file is written at default.
#OutputFile = 
